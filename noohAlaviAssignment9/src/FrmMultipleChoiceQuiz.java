/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author s201119359
 */
import java.lang.Math;
import java.util.ArrayList;
import java.util.Collections;
import java.text.DecimalFormat;

public class FrmMultipleChoiceQuiz extends javax.swing.JFrame {

    final int MAX_QUESTION_AMOUNT = 5;
    final int NUM_OF_CHOICES = 4;
    
    ArrayList<Question> currentQuestions = new ArrayList<>(); //empty for now, will be generated later
    ArrayList<ArrayList<String>> currentChoices = new ArrayList<>(); //empty for now, will be generated later
    ArrayList<String> answerStates = new ArrayList<>(); //stores whether answer is correct or not
    DecimalFormat df = new DecimalFormat("0.0");
    
    // Make a nested class for questions
    // Will have a "prompt" and an "answer"
    private class Question {
        private final String prompt;
        private final String[] choices; // 4 choices, rest ignored. first choice = answer
        
        public Question(String prompt_, String[] choices_) {
            prompt = prompt_;
            choices = choices_;
        }
        
        public String getPrompt() {
            return this.prompt;
        }
        
        public String getAnswer() {
            return this.choices[0];
        }
        
        public String[] getChoices() {
            return this.choices;
        }
    }
    
    // Make an array with all of the possible quiz questions
    // FIRST OPTION = ANSWER
    final Question[] ALL_QUESTIONS = {
        new Question("What is the capital of Egypt?", new String[]{"Cairo", "Riyadh", "Alexandria", "Luxor"}),
        new Question("What year did WWII start?", new String[]{"1939","1937","1938","1940"}),
        new Question("What year did WWI end?", new String[]{"1918","1919","1920", "1921"}),
        new Question("Who is the author of Sherlock Holmes?", new String[]{"Sir Arthur Conan Doyle","JK Rowling","JRR Tolkien","Charles Dickens"}),
        new Question("Who founded Apple?", new String[]{"Steve Jobs","Bill Gates","Mark Zuckerberg","Dwayne Johnson"}),
        new Question("Who founded Microsoft?", new String[]{"Bill Gates","Elon Musk","Jimmy Donaldson","Nikola Tesla"}),
        new Question("Who is the current prime minister of Canada?", new String[]{"Justin Trudeau","Donald Trump","Jeff Bezos","John Doe"}),
        new Question("What is Neville's last name in Harry Potter?", new String[]{"Longbottom","Granger","Skywalker","Weasley"}),
        new Question("When was the Java programing language first released?", new String[]{"1995","1962","2005","1978"}),
        new Question("How many seconds are in one day?", new String[]{"86400","864000","186400","84600"}),
        new Question("What is the last letter of the Greek alphabet?", new String[]{"Omega","Beta","Alpha","Theta"}),
        new Question("What was the original name of the 'Google' search engine?", new String[]{"BackRub","Beef","Wyvern","DustSweep"}),
        new Question("What does the 'MCU' stand for?", new String[]{"Marvel Cinematic Universe","Morbius Cinematic Universe","Marvel Cinema Umpire", "Marvel Cinema Universe"}),
        new Question("What is the third letter in the Arabic alphabet?", new String[]{"Taa", "Alif", "Noon", "Haa"}),
        new Question("What does '-stan' mean at the end of some country names?", new String[]{"Land", "Town", "City", "People"}),
        new Question("How many days are in a fortnight?", new String[]{"14", "7", "36","21"}),
        new Question("What is the name of the bone that connects from the elbow to the thumb?", new String[]{"Radius", "Ulna", "Humerus", "Funny Bone"}),
        new Question("Who won the NBA finals in 2021/2022?", new String[]{"Golden State Warriors", "Toronto Raptors", "Boston Celtics", "FC Barcelona"}),
        new Question("What is the largest sea animal?", new String[]{"Blue Whale","Orca", "Mermaid", "Mosasaurus"}),
        new Question("What city is the White House located in?", new String[]{"Washington, DC", "Whitby, ON", "Birmingham, AL", ""})
    };
    
    /**
     * Creates new form FrmMultipleChoiceQuiz
     */
    public FrmMultipleChoiceQuiz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMenu = new javax.swing.JPanel();
        lblMenuTitle = new javax.swing.JLabel();
        btnStartQuiz = new javax.swing.JButton();
        lblInstructions = new javax.swing.JLabel();
        pnlQuiz = new javax.swing.JPanel();
        lblQuizTitle = new javax.swing.JLabel();
        lblQuestion1 = new javax.swing.JLabel();
        lblQuestion1Option1 = new javax.swing.JLabel();
        lblQuestion1Option2 = new javax.swing.JLabel();
        lblQuestion1Option3 = new javax.swing.JLabel();
        lblQuestion1Option4 = new javax.swing.JLabel();
        lblQuestion2 = new javax.swing.JLabel();
        lblQuestion2Option1 = new javax.swing.JLabel();
        lblQuestion2Option2 = new javax.swing.JLabel();
        lblQuestion2Option3 = new javax.swing.JLabel();
        lblQuestion2Option4 = new javax.swing.JLabel();
        lblQuestion3 = new javax.swing.JLabel();
        lblQuestion3Option1 = new javax.swing.JLabel();
        lblQuestion3Option2 = new javax.swing.JLabel();
        lblQuestion3Option3 = new javax.swing.JLabel();
        lblQuestion3Option4 = new javax.swing.JLabel();
        lblQuestion4 = new javax.swing.JLabel();
        lblQuestion4Option1 = new javax.swing.JLabel();
        lblQuestion4Option2 = new javax.swing.JLabel();
        lblQuestion4Option3 = new javax.swing.JLabel();
        lblQuestion4Option4 = new javax.swing.JLabel();
        lblQuestion5 = new javax.swing.JLabel();
        lblQuestion5Option1 = new javax.swing.JLabel();
        lblQuestion5Option2 = new javax.swing.JLabel();
        lblQuestion5Option3 = new javax.swing.JLabel();
        lblQuestion5Option4 = new javax.swing.JLabel();
        txtAnswer1 = new javax.swing.JTextField();
        txtAnswer2 = new javax.swing.JTextField();
        txtAnswer3 = new javax.swing.JTextField();
        txtAnswer4 = new javax.swing.JTextField();
        txtAnswer5 = new javax.swing.JTextField();
        btnCheckAnswers = new javax.swing.JButton();
        btnBackToMenu = new javax.swing.JButton();
        pnlResults = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblSubtitle = new javax.swing.JLabel();
        lblScoreTitle = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        lblIncorrectTitle = new javax.swing.JLabel();
        lblIncorrect = new javax.swing.JLabel();
        lblPercentageTitle = new javax.swing.JLabel();
        lblPercentage = new javax.swing.JLabel();
        lblAnswersTitle = new javax.swing.JLabel();
        lblQuestion1Result = new javax.swing.JLabel();
        lblAnswer1Result = new javax.swing.JLabel();
        lblQuestion2Result = new javax.swing.JLabel();
        lblAnswer2Result = new javax.swing.JLabel();
        lblQuestion3Result = new javax.swing.JLabel();
        lblAnswer3Result = new javax.swing.JLabel();
        lblQuestion4Result = new javax.swing.JLabel();
        lblAnswer4Result = new javax.swing.JLabel();
        lblQuestion5Result = new javax.swing.JLabel();
        lblAnswer5Result = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMenuTitle.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        lblMenuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuTitle.setText("Nooh's Trivia!");
        lblMenuTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Welcome to...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 14))); // NOI18N

        btnStartQuiz.setBackground(new java.awt.Color(0, 100, 239));
        btnStartQuiz.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnStartQuiz.setText("Start Quiz");
        btnStartQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartQuizActionPerformed(evt);
            }
        });

        lblInstructions.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblInstructions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstructions.setText("Randomly generated questions!");

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnStartQuiz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMenuTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblInstructions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(lblMenuTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstructions)
                .addGap(233, 233, 233)
                .addComponent(btnStartQuiz)
                .addContainerGap(392, Short.MAX_VALUE))
        );

        pnlQuiz.setVisible(false);

        lblQuizTitle.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        lblQuizTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQuizTitle.setText("NOOH'S TRIVIA!");

        lblQuestion1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblQuestion1.setText("Question i.");

        lblQuestion1Option1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion1Option1.setText("a)");

        lblQuestion1Option2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion1Option2.setText("b)");

        lblQuestion1Option3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion1Option3.setText("c)");

        lblQuestion1Option4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion1Option4.setText("d)");

        lblQuestion2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblQuestion2.setText("Question ii.");

        lblQuestion2Option1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion2Option1.setText("a)");

        lblQuestion2Option2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion2Option2.setText("b)");

        lblQuestion2Option3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion2Option3.setText("c)");

        lblQuestion2Option4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion2Option4.setText("d)");

        lblQuestion3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblQuestion3.setText("Question iii.");

        lblQuestion3Option1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion3Option1.setText("a)");

        lblQuestion3Option2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion3Option2.setText("b)");

        lblQuestion3Option3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion3Option3.setText("c)");

        lblQuestion3Option4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion3Option4.setText("d)");

        lblQuestion4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblQuestion4.setText("Question iv.");

        lblQuestion4Option1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion4Option1.setText("a)");

        lblQuestion4Option2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion4Option2.setText("b)");

        lblQuestion4Option3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion4Option3.setText("c)");

        lblQuestion4Option4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion4Option4.setText("d)");

        lblQuestion5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblQuestion5.setText("Question v.");

        lblQuestion5Option1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion5Option1.setText("a)");

        lblQuestion5Option2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion5Option2.setText("b)");

        lblQuestion5Option3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion5Option3.setText("c)");

        lblQuestion5Option4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblQuestion5Option4.setText("d)");

        txtAnswer1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtAnswer1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAnswer2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtAnswer2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAnswer3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtAnswer3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAnswer4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtAnswer4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAnswer5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtAnswer5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnCheckAnswers.setBackground(new java.awt.Color(0, 178, 0));
        btnCheckAnswers.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnCheckAnswers.setText("Check Answers");
        btnCheckAnswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAnswersActionPerformed(evt);
            }
        });

        btnBackToMenu.setText("<- Back to Menu");
        btnBackToMenu.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnBackToMenu.setVerifyInputWhenFocusTarget(false);
        btnBackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlQuizLayout = new javax.swing.GroupLayout(pnlQuiz);
        pnlQuiz.setLayout(pnlQuizLayout);
        pnlQuizLayout.setHorizontalGroup(
            pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblQuizTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(pnlQuizLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCheckAnswers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addComponent(lblQuestion1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAnswer1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addComponent(lblQuestion2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQuestion3)
                                    .addGroup(pnlQuizLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblQuestion3Option2)
                                            .addComponent(lblQuestion3Option1)
                                            .addComponent(lblQuestion3Option3)
                                            .addComponent(lblQuestion3Option4))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addComponent(lblQuestion4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addComponent(lblQuestion5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAnswer5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBackToMenu)
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblQuestion1Option4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblQuestion1Option2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblQuestion1Option1)
                                    .addComponent(lblQuestion1Option3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuestion5Option2)
                            .addComponent(lblQuestion5Option1)
                            .addComponent(lblQuestion5Option3)
                            .addComponent(lblQuestion5Option4)
                            .addComponent(lblQuestion4Option2)
                            .addComponent(lblQuestion4Option1)
                            .addComponent(lblQuestion4Option3)
                            .addComponent(lblQuestion4Option4)
                            .addComponent(lblQuestion2Option2)
                            .addComponent(lblQuestion2Option1)
                            .addComponent(lblQuestion2Option3)
                            .addComponent(lblQuestion2Option4))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlQuizLayout.setVerticalGroup(
            pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuizLayout.createSequentialGroup()
                .addComponent(btnBackToMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuizTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion1)
                    .addComponent(txtAnswer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion1Option1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion1Option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion1Option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion1Option4)
                .addGap(18, 18, 18)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion2)
                    .addComponent(txtAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lblQuestion2Option1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion2Option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion2Option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion2Option4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion3)
                    .addComponent(txtAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion3Option1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion3Option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion3Option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion3Option4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion4)
                    .addComponent(txtAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(lblQuestion4Option1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion4Option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion4Option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion4Option4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion5)
                    .addComponent(txtAnswer5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblQuestion5Option1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion5Option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion5Option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion5Option4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheckAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        pnlResults.setVisible(false);

        lblTitle.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("NOOH'S TRIVIA!");

        lblSubtitle.setBackground(new java.awt.Color(174, 0, 0));
        lblSubtitle.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblSubtitle.setForeground(new java.awt.Color(174, 0, 0));
        lblSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubtitle.setText("- results - ");

        lblScoreTitle.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblScoreTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblScoreTitle.setText("Total Correct");

        lblScore.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblScore.setText("0 / 5");

        lblIncorrectTitle.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblIncorrectTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIncorrectTitle.setText("Total Incorrect");

        lblIncorrect.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblIncorrect.setText("0 / 5");

        lblPercentageTitle.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblPercentageTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPercentageTitle.setText("Total Correct Percentage");

        lblPercentage.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblPercentage.setText("0.0 %");

        lblAnswersTitle.setFont(new java.awt.Font("Verdana", 1, 22)); // NOI18N
        lblAnswersTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnswersTitle.setText("Answers");

        lblQuestion1Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblQuestion1Result.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuestion1Result.setText("Question i");

        lblAnswer1Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAnswer1Result.setText("Answer i");

        lblQuestion2Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblQuestion2Result.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuestion2Result.setText("Question ii");

        lblAnswer2Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAnswer2Result.setText("Answer ii");

        lblQuestion3Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblQuestion3Result.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuestion3Result.setText("Question iii");

        lblAnswer3Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAnswer3Result.setText("Answer iii");

        lblQuestion4Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblQuestion4Result.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuestion4Result.setText("Question iv");

        lblAnswer4Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAnswer4Result.setText("Answer iv");

        lblQuestion5Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblQuestion5Result.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuestion5Result.setText("Question v");

        lblAnswer5Result.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAnswer5Result.setText("Answer v");

        javax.swing.GroupLayout pnlResultsLayout = new javax.swing.GroupLayout(pnlResults);
        pnlResults.setLayout(pnlResultsLayout);
        pnlResultsLayout.setHorizontalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlResultsLayout.createSequentialGroup()
                        .addComponent(lblScoreTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlResultsLayout.createSequentialGroup()
                        .addComponent(lblPercentageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblAnswersTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlResultsLayout.createSequentialGroup()
                        .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlResultsLayout.createSequentialGroup()
                                .addComponent(lblIncorrectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblIncorrect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlResultsLayout.createSequentialGroup()
                                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlResultsLayout.createSequentialGroup()
                                        .addComponent(lblQuestion5Result, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnswer5Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(pnlResultsLayout.createSequentialGroup()
                                        .addComponent(lblQuestion4Result, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnswer4Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(pnlResultsLayout.createSequentialGroup()
                                        .addComponent(lblQuestion3Result, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnswer3Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(pnlResultsLayout.createSequentialGroup()
                                        .addComponent(lblQuestion1Result, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnswer1Result, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlResultsLayout.createSequentialGroup()
                                        .addComponent(lblQuestion2Result, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnswer2Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnlResultsLayout.setVerticalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblScoreTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblScore))
                .addGap(5, 5, 5)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblIncorrectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIncorrect))
                .addGap(18, 18, 18)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPercentageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPercentage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(lblAnswersTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuestion1Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnswer1Result))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuestion2Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnswer2Result))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuestion3Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnswer3Result))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuestion4Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnswer4Result))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuestion5Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnswer5Result))
                .addGap(219, 219, 219))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlQuiz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlQuiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToMenuActionPerformed
        // reset user answers
        txtAnswer1.setText("");
        txtAnswer2.setText("");
        txtAnswer3.setText("");
        txtAnswer4.setText("");
        txtAnswer5.setText("");
        
        // go back to main menu
        pnlQuiz.setVisible(false);
        pnlMenu.setVisible(true);
    }//GEN-LAST:event_btnBackToMenuActionPerformed

    private void btnStartQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartQuizActionPerformed
        // Generate questions
        generateRandomQuestions();
        
        // Change page to quiz
        pnlMenu.setVisible(false);
        pnlQuiz.setVisible(true);
    }//GEN-LAST:event_btnStartQuizActionPerformed

    private void btnCheckAnswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAnswersActionPerformed
        int score = 0;    
        
        // check answers and calculate score
        
        // check if they wrote a letter as answer
        int userAnswer1, userAnswer2, userAnswer3, userAnswer4, userAnswer5 = 0;
        String[] letterAnswers = {"a", "b", "c", "d"};
        int[] numAnswers = {0, 1, 2, 3};
        
        // convert user answer from letter to num (eg. a -> 0, b -> 1, etc)
        for (int i = 0; i < NUM_OF_CHOICES; i++) {
            if (letterAnswers[i].equals(txtAnswer1.getText().toLowerCase())) {
                userAnswer1 = numAnswers[i];
                if (currentChoices.get(0).get(userAnswer1).equalsIgnoreCase(getQuestionAnswer(0))) {
                    score++;
                    answerStates.add(" (Correct)");
                } else {
                    answerStates.add(" (Incorrect)");
                }
            } if (letterAnswers[i].equals(txtAnswer2.getText().toLowerCase())) {
                userAnswer2 = numAnswers[i];
                if (currentChoices.get(1).get(userAnswer2).equalsIgnoreCase(getQuestionAnswer(1))) {
                    score++;
                    answerStates.add(" (Correct)");
                } else {
                    answerStates.add(" (Incorrect)");
                }
            } if (letterAnswers[i].equals(txtAnswer3.getText().toLowerCase())) {
                userAnswer3 = numAnswers[i];
                if (currentChoices.get(2).get(userAnswer3).equalsIgnoreCase(getQuestionAnswer(2))) {
                    score++;
                    answerStates.add(" (Correct)");
                } else {
                    answerStates.add(" (Incorrect)");
                }
            } if (letterAnswers[i].equals(txtAnswer4.getText().toLowerCase())) {
                userAnswer4 = numAnswers[i];
                if (currentChoices.get(3).get(userAnswer4).equalsIgnoreCase(getQuestionAnswer(3))) {
                    score++;
                    answerStates.add(" (Correct)");
                } else {
                    answerStates.add(" (Incorrect)");
                }
            } if (letterAnswers[i].equals(txtAnswer5.getText().toLowerCase())) {
                userAnswer5 = numAnswers[i];
                if (currentChoices.get(4).get(userAnswer5).equalsIgnoreCase(getQuestionAnswer(4))) {
                    score++;
                    answerStates.add(" (Correct)");
                } else {
                    answerStates.add(" (Incorrect)");
                }
            }
        }
        
        // check answer
        
        // check if they wrote the complete answer
        if (txtAnswer1.getText().equalsIgnoreCase(getQuestionAnswer(0))) {
            score++;
        }
        if (txtAnswer2.getText().equalsIgnoreCase(getQuestionAnswer(1))) {
            score++;
        }
        if (txtAnswer3.getText().equalsIgnoreCase(getQuestionAnswer(2))) {
            score++;
        }
        if (txtAnswer4.getText().equalsIgnoreCase(getQuestionAnswer(3))) {
            score++;
        }
        if (txtAnswer5.getText().equalsIgnoreCase(getQuestionAnswer(4))) {
            score++;
        }
        
        // change to results page
        pnlQuiz.setVisible(false);
        pnlResults.setVisible(true);
        
        // output results
        lblScore.setText(score + " / " + MAX_QUESTION_AMOUNT);
        lblIncorrect.setText(MAX_QUESTION_AMOUNT - score + " / " + MAX_QUESTION_AMOUNT);
        lblPercentage.setText(df.format(((double)score/(double)MAX_QUESTION_AMOUNT) * 100) + " %");
        
        // output questions + answers
        lblQuestion1Result.setText(currentQuestions.get(0).getPrompt());
        lblQuestion2Result.setText(currentQuestions.get(1).getPrompt());
        lblQuestion3Result.setText(currentQuestions.get(2).getPrompt());
        lblQuestion4Result.setText(currentQuestions.get(3).getPrompt());
        lblQuestion5Result.setText(currentQuestions.get(4).getPrompt());
        
        lblAnswer1Result.setText(currentQuestions.get(0).getAnswer() + answerStates.get(0));
        lblAnswer2Result.setText(currentQuestions.get(1).getAnswer() + answerStates.get(1));
        lblAnswer3Result.setText(currentQuestions.get(2).getAnswer() + answerStates.get(2));
        lblAnswer4Result.setText(currentQuestions.get(3).getAnswer() + answerStates.get(3));
        lblAnswer5Result.setText(currentQuestions.get(4).getAnswer() + answerStates.get(4));
    }//GEN-LAST:event_btnCheckAnswersActionPerformed
    
    private String getQuestionAnswer(int num) {
        return currentQuestions.get(num).getAnswer();
    }
    
    private ArrayList<Question> getRandomQuestionArrayList() {
        // make an ArrayList that has all of the questions that will be used in this game
        ArrayList<Question> questions = new ArrayList<>();
        while (questions.size() < MAX_QUESTION_AMOUNT) {
            int randomNum = (int)Math.round(Math.random() * (ALL_QUESTIONS.length-1));
            Question randomQuestion = ALL_QUESTIONS[randomNum];
            
            // Check if question already in quiz, if it is continue loop
            if (questions.contains(randomQuestion)) {
                continue;
            }
            
            // Add question if not already in quiz
            questions.add(randomQuestion);
        }
        return questions;
    }
    
    private ArrayList<String> getRandomChoices(int questionIndex) {
        String[] choicesArray = currentQuestions.get(questionIndex).getChoices();
        ArrayList<String> choicesArrayList = new ArrayList<>();
        
        for (int i = 0; i < choicesArray.length; i++) {
            choicesArrayList.add(choicesArray[i]);
        }
        
        // shuffle ArrayList
        Collections.shuffle(choicesArrayList); 
        
        return choicesArrayList;
    }
    
    private void setChoices() {
        // Get random choices and put them in ArrayList
        currentChoices = new ArrayList<>(); // reset choices
        
        for (int i = 0; i < MAX_QUESTION_AMOUNT; i++) {
            currentChoices.add(getRandomChoices(i));
        }
        
        // Question 1 choices
        lblQuestion1Option1.setText("a) " + currentChoices.get(0).get(0));
        lblQuestion1Option2.setText("b) " + currentChoices.get(0).get(1));
        lblQuestion1Option3.setText("c) " + currentChoices.get(0).get(2));
        lblQuestion1Option4.setText("d) " + currentChoices.get(0).get(3));
        
        // Question 2 choices
        lblQuestion2Option1.setText("a) " + currentChoices.get(1).get(0));
        lblQuestion2Option2.setText("b) " + currentChoices.get(1).get(1));
        lblQuestion2Option3.setText("c) " + currentChoices.get(1).get(2));
        lblQuestion2Option4.setText("d) " + currentChoices.get(1).get(3));
        
        // Question 3 choices
        lblQuestion3Option1.setText("a) " + currentChoices.get(2).get(0));
        lblQuestion3Option2.setText("b) " + currentChoices.get(2).get(1));
        lblQuestion3Option3.setText("c) " + currentChoices.get(2).get(2));
        lblQuestion3Option4.setText("d) " + currentChoices.get(2).get(3));
        
        // Question 4 choices
        lblQuestion4Option1.setText("a) " + currentChoices.get(3).get(0));
        lblQuestion4Option2.setText("b) " + currentChoices.get(3).get(1));
        lblQuestion4Option3.setText("c) " + currentChoices.get(3).get(2));
        lblQuestion4Option4.setText("d) " + currentChoices.get(3).get(3));
        
        // Question 5 choices
        lblQuestion5Option1.setText("a) " + currentChoices.get(4).get(0));
        lblQuestion5Option2.setText("b) " + currentChoices.get(4).get(1));
        lblQuestion5Option3.setText("c) " + currentChoices.get(4).get(2));
        lblQuestion5Option4.setText("d) " + currentChoices.get(4).get(3));
    }
    
    private void generateRandomQuestions() {
        currentQuestions = getRandomQuestionArrayList();
        
        // set question labels
        lblQuestion1.setText("Question i. " + currentQuestions.get(0).getPrompt());
        lblQuestion2.setText("Question ii. " + currentQuestions.get(1).getPrompt());
        lblQuestion3.setText("Question iii. " + currentQuestions.get(2).getPrompt());
        lblQuestion4.setText("Question iv. " + currentQuestions.get(3).getPrompt());
        lblQuestion5.setText("Question v. " + currentQuestions.get(4).getPrompt());
        
        // set choice labels
        setChoices();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMultipleChoiceQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToMenu;
    private javax.swing.JButton btnCheckAnswers;
    private javax.swing.JButton btnStartQuiz;
    private javax.swing.JLabel lblAnswer1Result;
    private javax.swing.JLabel lblAnswer2Result;
    private javax.swing.JLabel lblAnswer3Result;
    private javax.swing.JLabel lblAnswer4Result;
    private javax.swing.JLabel lblAnswer5Result;
    private javax.swing.JLabel lblAnswersTitle;
    private javax.swing.JLabel lblIncorrect;
    private javax.swing.JLabel lblIncorrectTitle;
    private javax.swing.JLabel lblInstructions;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblPercentage;
    private javax.swing.JLabel lblPercentageTitle;
    private javax.swing.JLabel lblQuestion1;
    private javax.swing.JLabel lblQuestion1Option1;
    private javax.swing.JLabel lblQuestion1Option2;
    private javax.swing.JLabel lblQuestion1Option3;
    private javax.swing.JLabel lblQuestion1Option4;
    private javax.swing.JLabel lblQuestion1Result;
    private javax.swing.JLabel lblQuestion2;
    private javax.swing.JLabel lblQuestion2Option1;
    private javax.swing.JLabel lblQuestion2Option2;
    private javax.swing.JLabel lblQuestion2Option3;
    private javax.swing.JLabel lblQuestion2Option4;
    private javax.swing.JLabel lblQuestion2Result;
    private javax.swing.JLabel lblQuestion3;
    private javax.swing.JLabel lblQuestion3Option1;
    private javax.swing.JLabel lblQuestion3Option2;
    private javax.swing.JLabel lblQuestion3Option3;
    private javax.swing.JLabel lblQuestion3Option4;
    private javax.swing.JLabel lblQuestion3Result;
    private javax.swing.JLabel lblQuestion4;
    private javax.swing.JLabel lblQuestion4Option1;
    private javax.swing.JLabel lblQuestion4Option2;
    private javax.swing.JLabel lblQuestion4Option3;
    private javax.swing.JLabel lblQuestion4Option4;
    private javax.swing.JLabel lblQuestion4Result;
    private javax.swing.JLabel lblQuestion5;
    private javax.swing.JLabel lblQuestion5Option1;
    private javax.swing.JLabel lblQuestion5Option2;
    private javax.swing.JLabel lblQuestion5Option3;
    private javax.swing.JLabel lblQuestion5Option4;
    private javax.swing.JLabel lblQuestion5Result;
    private javax.swing.JLabel lblQuizTitle;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lblScoreTitle;
    private javax.swing.JLabel lblSubtitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlQuiz;
    private javax.swing.JPanel pnlResults;
    private javax.swing.JTextField txtAnswer1;
    private javax.swing.JTextField txtAnswer2;
    private javax.swing.JTextField txtAnswer3;
    private javax.swing.JTextField txtAnswer4;
    private javax.swing.JTextField txtAnswer5;
    // End of variables declaration//GEN-END:variables
}
