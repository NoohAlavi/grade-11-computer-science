import java.util.ArrayList;
import java.util.Scanner;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.util.Random;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author s201119359 - Nooh Alavi
 */

public class frmLibraryManager extends javax.swing.JFrame {
    final String USERS_DB_SAVE_FILE = "src/usersDB.csv";
    final String BOOKS_FILE_SAVE_FILE = "src/bookList.json";
    
    // Constants for password encryption/decryption
    final String CHAR_1 = "a";
    final String CHAR_1_ALT = "e";
    final String CHAR_2 = "u";
    final String CHAR_2_ALT = "i";
    final String CHAR_3 = "\\.";
    final String CHAR_3_ALT = ",";
    final String TEMP_CHAR = "â €";
    
    final String CHARACTER_LIST = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()[]{}";
    
    ArrayList<User> users = new ArrayList<>(); // Will be loaded in
    JSONObject books = new JSONObject(); // Will be loaded in
    
    User currentUser;
    
    /**
     * Creates new form frmLibraryManager
     */
    public frmLibraryManager() {
        initComponents();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMenuPage = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblInfo = new javax.swing.JLabel();
        pnlLoginPage = new javax.swing.JPanel();
        lblLoginTitle = new javax.swing.JLabel();
        btnBackLogin = new javax.swing.JButton();
        txtEmailLogin = new javax.swing.JTextField();
        pwdPasswordLogin = new javax.swing.JPasswordField();
        btnLoginAccount = new javax.swing.JButton();
        pnlSignUpPage = new javax.swing.JPanel();
        lblSignUpTitle = new javax.swing.JLabel();
        txtFullNameSignUp = new javax.swing.JTextField();
        txtEmailSignUp = new javax.swing.JTextField();
        pwdPassword1SignUp = new javax.swing.JPasswordField();
        pwdPassword2SignUp = new javax.swing.JPasswordField();
        btnMakeAccount = new javax.swing.JButton();
        btnBackSignUp = new javax.swing.JButton();
        pnlHomePage = new javax.swing.JPanel();
        lblHomeTitle = new javax.swing.JLabel();
        btnBorrow = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        txtISBN = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Library Management Software");

        btnLogin.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnSignUp.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        btnSignUp.setText("Sign up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblInfo.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        lblInfo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInfo.setText("Made by Nooh Alavi (s201119359@ddsbstudent.ca, noohalavidev@gmail.com), 2023. Version 1.0.0. Last updated 25/01/2023.");

        javax.swing.GroupLayout pnlMenuPageLayout = new javax.swing.GroupLayout(pnlMenuPage);
        pnlMenuPage.setLayout(pnlMenuPageLayout);
        pnlMenuPageLayout.setHorizontalGroup(
            pnlMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuPageLayout.setVerticalGroup(
            pnlMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuPageLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSignUp)
                .addGap(75, 75, 75)
                .addComponent(btnExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(lblInfo)
                .addContainerGap())
        );

        pnlLoginPage.setVisible(false);

        lblLoginTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginTitle.setText("LOG INTO EXISTING ACCOUNT");

        btnBackLogin.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnBackLogin.setText("<- Back");
        btnBackLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackLoginActionPerformed(evt);
            }
        });

        txtEmailLogin.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        txtEmailLogin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEmailLogin.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter your email address, then click enter."));
        txtEmailLogin.setEnabled(false);
        txtEmailLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailLoginActionPerformed(evt);
            }
        });

        pwdPasswordLogin.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        pwdPasswordLogin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pwdPasswordLogin.setToolTipText("");
        pwdPasswordLogin.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter your password, then click enter."));
        pwdPasswordLogin.setEnabled(false);
        pwdPasswordLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordLoginActionPerformed(evt);
            }
        });

        btnLoginAccount.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        btnLoginAccount.setText("LOG IN");
        btnLoginAccount.setEnabled(false);
        btnLoginAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginPageLayout = new javax.swing.GroupLayout(pnlLoginPage);
        pnlLoginPage.setLayout(pnlLoginPageLayout);
        pnlLoginPageLayout.setHorizontalGroup(
            pnlLoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLoginTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoginPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoginAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlLoginPageLayout.createSequentialGroup()
                        .addComponent(btnBackLogin)
                        .addGap(0, 705, Short.MAX_VALUE))
                    .addComponent(txtEmailLogin)
                    .addComponent(pwdPasswordLogin))
                .addContainerGap())
        );
        pnlLoginPageLayout.setVerticalGroup(
            pnlLoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginPageLayout.createSequentialGroup()
                .addComponent(lblLoginTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtEmailLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwdPasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoginAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addComponent(btnBackLogin)
                .addContainerGap())
        );

        pnlSignUpPage.setVisible(false);

        lblSignUpTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblSignUpTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSignUpTitle.setText("MAKE NEW ACCOUNT");

        txtFullNameSignUp.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        txtFullNameSignUp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFullNameSignUp.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter your full name, then click enter."));
        txtFullNameSignUp.setEnabled(false);
        txtFullNameSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameSignUpActionPerformed(evt);
            }
        });

        txtEmailSignUp.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        txtEmailSignUp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEmailSignUp.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter your email address, then click enter."));
        txtEmailSignUp.setEnabled(false);
        txtEmailSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailSignUpActionPerformed(evt);
            }
        });

        pwdPassword1SignUp.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        pwdPassword1SignUp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pwdPassword1SignUp.setToolTipText("");
        pwdPassword1SignUp.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter your password, then click enter."));
        pwdPassword1SignUp.setEnabled(false);
        pwdPassword1SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPassword1SignUpActionPerformed(evt);
            }
        });

        pwdPassword2SignUp.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        pwdPassword2SignUp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pwdPassword2SignUp.setToolTipText("");
        pwdPassword2SignUp.setBorder(javax.swing.BorderFactory.createTitledBorder("Please confirm your password, then click enter."));
        pwdPassword2SignUp.setEnabled(false);
        pwdPassword2SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPassword2SignUpActionPerformed(evt);
            }
        });

        btnMakeAccount.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        btnMakeAccount.setText("CREATE ACCOUNT");
        btnMakeAccount.setEnabled(false);
        btnMakeAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeAccountActionPerformed(evt);
            }
        });

        btnBackSignUp.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnBackSignUp.setText("<- Back");
        btnBackSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSignUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSignUpPageLayout = new javax.swing.GroupLayout(pnlSignUpPage);
        pnlSignUpPage.setLayout(pnlSignUpPageLayout);
        pnlSignUpPageLayout.setHorizontalGroup(
            pnlSignUpPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignUpPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSignUpPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pwdPassword1SignUp)
                    .addComponent(txtFullNameSignUp)
                    .addComponent(lblSignUpTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addComponent(txtEmailSignUp)
                    .addComponent(pwdPassword2SignUp)
                    .addComponent(btnMakeAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlSignUpPageLayout.createSequentialGroup()
                        .addComponent(btnBackSignUp)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlSignUpPageLayout.setVerticalGroup(
            pnlSignUpPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignUpPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSignUpTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFullNameSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmailSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(pwdPassword1SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwdPassword2SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMakeAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(btnBackSignUp)
                .addContainerGap())
        );

        pnlHomePage.setVisible(false);

        lblHomeTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblHomeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHomeTitle.setText("Library Home Page");

        btnBorrow.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnBorrow.setText("Borrow Book");
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });

        btnReturn.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnReturn.setText("Return Book");

        txtISBN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtISBN.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter the book's ISBN number, and click enter."));
        txtISBN.setVisible(false);
        txtISBN.setEnabled(false);
        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHomePageLayout = new javax.swing.GroupLayout(pnlHomePage);
        pnlHomePage.setLayout(pnlHomePageLayout);
        pnlHomePageLayout.setHorizontalGroup(
            pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHomeTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addComponent(btnBorrow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnReturn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtISBN)
                .addContainerGap())
        );
        pnlHomePageLayout.setVerticalGroup(
            pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHomeTitle)
                .addGap(184, 184, 184)
                .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBorrow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReturn)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMenuPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlHomePage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlLoginPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlSignUpPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMenuPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlHomePage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlLoginPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlSignUpPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class User {        
        ArrayList<String> borrowedBooks = new ArrayList<>();
        
        private String saveFilePath;
        
        private String email;
        private String fullName;
        private String password;
        
        public User(String name, String email, String password) {
            this.email = email;
            this.fullName = name;
            this.password = password;
        }
    }
    
    private class Book {        
        private String bookTitle;
        private String author;
        
        private int totalStock;
        private int currentStock;
        
        public Book(String bookTitle, String author, int totalStock, int currentStock) {
            this.bookTitle = bookTitle;
            this.author = author;
            this.totalStock = totalStock;
            this.currentStock = currentStock;
        }
    }
    
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        changePage("menu", "login");
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // Exit program
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        // Change to sign up page
        changePage("menu", "signup");
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void txtEmailSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailSignUpActionPerformed
        if (txtEmailSignUp.getText().length() > 0)
            pwdPassword1SignUp.setEnabled(true);
    }//GEN-LAST:event_txtEmailSignUpActionPerformed

    private void pwdPassword1SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPassword1SignUpActionPerformed
        if (pwdPassword1SignUp.getText().length() > 0)
            pwdPassword2SignUp.setEnabled(true);
    }//GEN-LAST:event_pwdPassword1SignUpActionPerformed

    private void pwdPassword2SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPassword2SignUpActionPerformed
        if (pwdPassword2SignUp.getText().length() > 0)
        btnMakeAccount.setEnabled(true);
    }//GEN-LAST:event_pwdPassword2SignUpActionPerformed

    private void btnMakeAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeAccountActionPerformed
        String fullName = txtFullNameSignUp.getText();
        String email = txtEmailSignUp.getText().toLowerCase();
        String password = pwdPassword1SignUp.getText();
        String confirmPassword = pwdPassword2SignUp.getText();
        
        if (!password.equals(confirmPassword)) {
            System.out.println("Passwords do not match!");
            return;
        }
        
        if (createAccount(fullName, email, password)) {
            changePage("signup", "home");
        };
    }//GEN-LAST:event_btnMakeAccountActionPerformed

    private void btnBackSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSignUpActionPerformed
        // Return to homepage
        changePage("signup", "menu");
    }//GEN-LAST:event_btnBackSignUpActionPerformed

    private void txtFullNameSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameSignUpActionPerformed
        txtEmailSignUp.setEnabled(true);
    }//GEN-LAST:event_txtFullNameSignUpActionPerformed

    private void btnBackLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackLoginActionPerformed
        changePage("login", "menu");
    }//GEN-LAST:event_btnBackLoginActionPerformed

    private void txtEmailLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailLoginActionPerformed
        pwdPasswordLogin.setEnabled(true);
    }//GEN-LAST:event_txtEmailLoginActionPerformed

    private void pwdPasswordLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordLoginActionPerformed
        btnLoginAccount.setEnabled(true);
    }//GEN-LAST:event_pwdPasswordLoginActionPerformed

    private void btnLoginAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginAccountActionPerformed
        String email = txtEmailLogin.getText();
        String password = pwdPasswordLogin.getText();
        
        if (loginAccount(email, password)) {
            changePage("login", "home");
        }
    }//GEN-LAST:event_btnLoginAccountActionPerformed

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        btnBorrow.setEnabled(false);
        btnBorrow.setVisible(false);
        
        btnReturn.setEnabled(false);
        btnReturn.setVisible(false);
        
        txtISBN.setEnabled(true);
        txtISBN.setVisible(true);
    }//GEN-LAST:event_btnBorrowActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed
        try {
            JSONObject book = (JSONObject) books.get(txtISBN.getText());
            System.out.println("You have selected '" + book.get("bookTitle") + "' by " + book.get("author"));
            int bookQuantity = Integer.parseInt((String) book.get("quantity"));
            
            if (bookQuantity > 0) {
                
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_txtISBNActionPerformed

    private void loadData() {
        try {
            BufferedReader reader = new BufferedReader(new FileReader(USERS_DB_SAVE_FILE));
            String line;
            
            while ((line = reader.readLine()) != null) {
                String[] userData = line.split(",");
                users.add(new User(
                        userData[1], // Name
                        userData[0], // Email
                        userData[2] // Password
                ));
            }
            
            reader.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        
        try {
            JSONParser parser = new JSONParser();
            Reader reader = new FileReader(BOOKS_FILE_SAVE_FILE);
            
            books = (JSONObject) parser.parse(reader);
            
            reader.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    void changePage(String currentPage, String targetPage) {
        switch (currentPage.toLowerCase()) {
            case "menu":
                btnLogin.setEnabled(false);
                btnSignUp.setEnabled(false);
                btnExit.setEnabled(false);
                
                pnlMenuPage.setVisible(false);
                break;
            case "login":
                txtEmailLogin.setText("");
                pwdPasswordLogin.setText("");
                
                txtEmailLogin.setEnabled(false);
                pwdPasswordLogin.setEnabled(false);
                
                pnlLoginPage.setVisible(false);
                break;
            case "signup":
                txtFullNameSignUp.setText("");
                txtEmailSignUp.setText("");
                pwdPassword1SignUp.setText("");
                pwdPassword2SignUp.setText("");
                
                txtFullNameSignUp.setEnabled(false);
                txtEmailSignUp.setEnabled(false);
                pwdPassword1SignUp.setEnabled(false);
                pwdPassword2SignUp.setEnabled(false);
                
                pnlSignUpPage.setVisible(false);
                break;
            case "home":
                btnBorrow.setEnabled(false);
                btnReturn.setEnabled(false);
                
                pnlHomePage.setVisible(false);
                break;
        }
        switch (targetPage.toLowerCase()) {
            case "menu":
                btnLogin.setEnabled(true);
                btnSignUp.setEnabled(true);
                btnExit.setEnabled(true);
                
                pnlMenuPage.setVisible(true);
                break;
            case "login":
                txtEmailLogin.setEnabled(true);
                
                pnlLoginPage.setVisible(true);
                break;
            case "signup":
                txtFullNameSignUp.setEnabled(true);
                
                pnlSignUpPage.setVisible(true);
                break;
            case "home":
                btnBorrow.setEnabled(true);
                btnReturn.setEnabled(true);
                
                pnlHomePage.setVisible(true);
                break;
        }
    }
    
    private String getEncrypted(String originalMsg) {
        String encryptedMsg = "";
        
        // Encryption stage 1: reverse string
        for (int i = originalMsg.length(); i > 0; i--) {
            String newLetter = Character.toString(originalMsg.charAt(i - 1));
            encryptedMsg = encryptedMsg.concat(newLetter);
        }
        
        // Encryption stage 2: flip some letters
        // a -> e and vice versa
        // u -> i and vice versa
        // . -> , and vice versa
        encryptedMsg = encryptedMsg.trim()
                .replaceAll(CHAR_1, TEMP_CHAR)
                .replaceAll(CHAR_1_ALT, CHAR_1)
                .replaceAll(TEMP_CHAR, CHAR_1_ALT)
                
                .replaceAll(CHAR_2, TEMP_CHAR)
                .replaceAll(CHAR_2_ALT, CHAR_2)
                .replaceAll(TEMP_CHAR, CHAR_2_ALT)
                
                .replaceAll(CHAR_3, TEMP_CHAR)
                .replaceAll(CHAR_3_ALT, CHAR_3)
                .replaceAll(TEMP_CHAR, CHAR_3_ALT);
        
        // Encryption stage 3: add random characters
        for (int i = 0; i < encryptedMsg.length(); i++) {
            if (i % 2 == 0) {
                char randomChar = CHARACTER_LIST.charAt(new Random().nextInt(CHARACTER_LIST.length()));
                encryptedMsg = new StringBuilder(encryptedMsg).insert(i, randomChar).toString();
            }
        }
        
        return encryptedMsg;
    }
    
    private String getDecrypted(String encryptedMsg) {
        String decryptedMsg = "";
        
        // Encryption stage 1: reverse string
        for (int i = encryptedMsg.length(); i > 0; i--) {
            String newLetter = Character.toString(encryptedMsg.charAt(i - 1));
            decryptedMsg = decryptedMsg.concat(newLetter);
        }
        
        // Encryption stage 2: unflip the letters
        // a -> e and vice versa
        // u -> i and vice versa
        // . -> , and vice versa
        decryptedMsg = decryptedMsg.trim()
                .replaceAll(CHAR_1_ALT, TEMP_CHAR)
                .replaceAll(CHAR_1, CHAR_1_ALT)
                .replaceAll(TEMP_CHAR, CHAR_1)
                
                .replaceAll(CHAR_2_ALT, TEMP_CHAR)
                .replaceAll(CHAR_2, CHAR_2_ALT)
                .replaceAll(TEMP_CHAR, CHAR_2)
                
                .replaceAll(CHAR_3_ALT, TEMP_CHAR)
                .replaceAll(CHAR_3, CHAR_3_ALT)
                .replaceAll(TEMP_CHAR, CHAR_3);
        
        // Encryption stage 3: remove random characters
        String finalDecryptedMsg = "";
        
        for (int i = 0; i < decryptedMsg.length(); i++) {
            if (i % 2 == 0) {
                finalDecryptedMsg = finalDecryptedMsg.concat(Character.toString(
                        decryptedMsg.charAt(i))
                );
            }
        }
        
        return finalDecryptedMsg;
    }
    
    private Boolean createAccount(String fullName, String email, String password) {
        // check if email exists in db
        for (User user : users) {
            if (email.equals(user.email)) {
                System.out.println("Please use a unique email!");
                return false;
            }
        }
        
        // encrypt password
        password = getEncrypted(password);
        
        User newUser = new User(fullName, email, password);
        
        // save account to db
        try {
            String file = "";
            
            BufferedReader reader = new BufferedReader(new FileReader(USERS_DB_SAVE_FILE));
            String line;
            
            while((line = reader.readLine()) != null) {
                file += line + "\n";
            }
            file += newUser.email + "," + newUser.fullName + "," + newUser.password;
            
            BufferedWriter writer = new BufferedWriter(new FileWriter(USERS_DB_SAVE_FILE));
            writer.write(file);
            
            reader.close();
            writer.close();
            
            System.out.println("Account saved successfully!");
            return true;
        } catch (IOException e) {
            System.out.println("[ERROR] " + e);
        }
        return false;
    }
    
    Boolean loginAccount(String email, String password) {
        // check if email exists
        for (User user : users) {
            if (email.equals(user.email)) {
                if (password.equals(getDecrypted(user.password))) {
                    System.out.println("Successfully logged into " + user.fullName);
                    return true;
                }
            }
        }
        return false;
    }
    
    String borrowBook() {
        String receipt = "";
        return receipt;
    }
    
    void returnBook() {
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLibraryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLibraryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLibraryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLibraryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLibraryManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackLogin;
    private javax.swing.JButton btnBackSignUp;
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLoginAccount;
    private javax.swing.JButton btnMakeAccount;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JLabel lblHomeTitle;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblSignUpTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlHomePage;
    private javax.swing.JPanel pnlLoginPage;
    private javax.swing.JPanel pnlMenuPage;
    private javax.swing.JPanel pnlSignUpPage;
    private javax.swing.JPasswordField pwdPassword1SignUp;
    private javax.swing.JPasswordField pwdPassword2SignUp;
    private javax.swing.JPasswordField pwdPasswordLogin;
    private javax.swing.JTextField txtEmailLogin;
    private javax.swing.JTextField txtEmailSignUp;
    private javax.swing.JTextField txtFullNameSignUp;
    private javax.swing.JTextField txtISBN;
    // End of variables declaration//GEN-END:variables
}
